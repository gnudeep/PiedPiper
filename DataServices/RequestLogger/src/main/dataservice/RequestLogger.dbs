<data name="RequestLogger" serviceGroup="" serviceNamespace="">
    <description/>
    <config id="RL">
        <property name="org.wso2.ws.dataservice.user">root</property>
        <property name="org.wso2.ws.dataservice.password">root4mysql</property>
        <property name="org.wso2.ws.dataservice.protocol">jdbc:mysql://localhost:3309/requestLogger</property>
        <property name="org.wso2.ws.dataservice.driver">com.mysql.jdbc.Driver</property>
        <property name="org.wso2.ws.dataservice.minpoolsize">50</property>
        <property name="org.wso2.ws.dataservice.maxpoolsize">1000</property>
        <property name="org.wso2.ws.dataservice.validation_query">SELECT 1;</property>
    </config>
    <policy key=""/>
    <query id="customersInBostonSQL" useConfig="RequestLogger">
        <sql>select  * from Customers where city = 'Boston' and country = 'USA'</sql>
        <result element="customers" rowName="customer">
            <element column="customerName" name="customer-name" exportType="SCALAR" xsdType="xs:string"/>
            <element column="contactLastName" name="contact-last-name" xsdType="string"/>
            <element column="contactFirstName" name="contact-first-name" xsdType="string"/>
            <element column="phone" name="phone" xsdType="string"/>
            <element column="city" name="city" xsdType="string"/>
            <element column="country" name="country" xsdType="string"/>
        </result>
    </query>
    <query id="addEmployeeQuery" useConfig="RequestLogger">
        <sql>insert into Employees (employeeNumber, lastName, firstName, email, salary) values(:employeeNumber,:lastName,:firstName,:email,:salary)</sql>
        <param name="employeeNumber" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="lastName" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="3"/>
        </param>
        <param name="firstName" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="email" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN">
            <validatePattern pattern="(?:[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*|&quot;(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*&quot;)@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])"/>
        </param>
        <param defaultValue="1500" name="salary" ordinal="5" paramType="SCALAR" sqlType="DOUBLE" type="IN"/>
    </query>
    <operation name="customersInBoston">
        <call-query href="customersInBostonSQL"/>
    </operation>
    <operation returnRequestStatus="true" name="addEmployee">
        <call-query href="addEmployeeQuery">
            <with-param name="employeeNumber" query-param="employeeNumber"/>
            <with-param name="lastName" query-param="lastName"/>
            <with-param name="firstName" query-param="firstName"/>
            <with-param name="email" query-param="email"/>
            <with-param name="salary" query-param="salary"/>
        </call-query>
    </operation>
</data>
